<appSettings>

    <add key="webpages:Version" value="3.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    
    <!--3rd Party Library AppSettings-->
    <add key="RouteDebugger:Enabled" value="false" />
    <!-- Fixes MVC issue where unauthenticated users always get directed to /Account/Login -->
    <add key="autoFormsAuthentication" value="false" />
    <add key="enableSimpleMembership" value="false"/>
    <add key="PreserveLoginUrl" value="true" />
    <!-- Application level settings -->
    <add key="Application.Name" value="${Application.Name}" />
    <add key="Application.URL" value="${Application.URL}"/> <!-- Used by Gravitate.Quartz.Server for emails, see Gravitate.Quartz.Server\App.config -->
    <add key="Application.ApplicationRootUrlRedirect" value="Login/Login/BaseURL" />
    <add key="Application.StartPage" value="/Dashboard"/>
    <add key="Application.IsInternalPortal" value ="true"/>
    <add key="Application.IsMobileEnabled" value ="false"/>
    <!--<add key="Application.AnalyticsToken" value =""/>-->
    
    <add key="Application.FireErrorNotificationJob" value ="false"/> <!--Indicates whether the website will fire this job when there's an error.  See the job config for settings including recipient.-->
    <add key="Application.SupportEmailAddress" value ="${Application.SupportEmailAddress}"/> <!--Application errors link to this email-->

  <!-- These settings will control the cacheing of all pages -->
    <add key="Application.Page.Cache.ExpiresInSeconds" value="-1" />
    <add key="Application.Page.Cache.HttpCacheability" value="NoCache" />
    <add key="Application.Page.Cache.AllowResponseInBrowserHistory" value="false" />
    <add key="Application.Page.Cache.SetRevalidation" value="AllCaches" />
    <add key="Application.Page.Cache.SetValidUntilExpires" value="false" />
    <add key="Application.DefaultCacheTimeoutInMinutes" value="30"/>
    <add key="Application.RobotsMetaTag" value="${Application.RobotsMetaTag}"/>
    <!-- Alternative cache values that don't require the page to repost to the server when hitting the back button.-->
    <!-- 
    <add key="Application.Page.Cache.HttpCacheability" value="Private" />
    <add key="Application.Page.Cache.AllowResponseInBrowserHistory" value="true" />
    -->

    <!-- For MVC changes -->
    <add key="ClientValidationEnabled" value="true"/>
    <add key="UnobtrusiveJavaScriptEnabled" value="true"/>

  <add key="Gravitate.Integration.Services.Enabled" value="true"/>


    <!-- Gravitate.Security -->
    <!--Providers must have indexes and you must enter the current index.  
        Previous indexes must exist if there are still credentials using them.
        Register providers by name in Widsor and include Gravitate.Security in the Windsor assembly list.(see PasswordEncryptionProviderInstaller)
        Password Encryption providers and settings need to match between the website and quartz.
        
        ******PasswordStrengthRegularExpression*******
        The password must match the regular expression if it's not null or empty.
            Example:   ^(?=.*[A-Z].*[A-Z])(?=.*[!@#$&*])(?=.*[0-9].*[0-9])(?=.*[a-z].*[a-z].*[a-z]).{8}$
            Explanation:
            AAaaa12!
            ^                         Start anchor
            (?=.*[A-Z].*[A-Z])        Ensure string has two uppercase letters.
            (?=.*[!@#$&*])            Ensure string has one special case letter.
            (?=.*[0-9].*[0-9])        Ensure string has two digits.
            (?=.*[a-z].*[a-z].*[a-z]) Ensure string has three lowercase letters.
            .{8}                      Ensure string is of length 8.(always keep the . here)
            $                         End anchor.
            
            This example requires one upper and one lower case character: ^(?=.*[A-Z])(?=.*[a-z]).*$
        -->

    <add key="Gravitate.Security.CurrentPasswordProviderIndex" value="2" />
    <add key="Gravitate.Security.PasswordProviderName_1" value="SHA256" />
    <add key="Gravitate.Security.PasswordProviderName_2" value="PBKDF2" />
    <add key="Gravitate.Security.PasswordProviderArguments_2" value="{iterations:6000}" />

  <add key="Gravitate.Security.MinRequiredPasswordLength" value="9" />
    <add key="Gravitate.Security.MaxInvalidPasswordAttempts" value="5" />
    <add key="Gravitate.Security.MinRequiredNonAlphanumericCharacters" value="0" />
    <add key="Gravitate.Security.PasswordStrengthRegularExpression" value="^((?=.*[A-Z])(?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&amp;*]))|((?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&amp;*]))|((?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&amp;*])).*$" />
    <!--Message shown to user if the new password doesn't pass the above regular expression.-->
    <add key="Gravitate.Security.PasswordStrengthErrorMessage" value="Passwords must contain at least three (3) of the following four (4) items: (i) upper-case characters, (ii) lower-case characters, (iii) numeric characters, and/or (iv) special characters" />

    <add key="Gravitate.Security.WeakPasswordFilePath" value="10_million_password_list_top_1000000.txt" />
    <add key="Gravitate.Security.ResettingPasswordUnlocksAccount" value="false" />
    <add key="Gravitate.Security.PasswordResetTokenExpirationInMinutes" value="60"/>
    <add key="Gravitate.Security.AccountCreatedTokenExpirationInMinutes" value="1440"/>
    
    <add key="Gravitate.Security.PasswordAttemptWindow" value="5" /> <!--When a password fails, we check if the first failure was before this window.  If so, the failure counter is set to 1.-->
    <add key="Gravitate.Security.SecurityProtocol" value="Tls12" />
    <add key="Gravitate.Security.LogonUserType" value="2" />
    <add key="Gravitate.Security.AllowCredentialTypes" value="true" />
    <add key="Gravitate.Security.ExternalCredentialDefault" value="Gravitate" />
    
    <!-- Two Factor required roles.  Same names as the admin pages.  Use "All" or "None" or a comma delimited list of Roles. -->
    <add key="Gravitate.Security.RequireTwoFactorOnRoles" value="None"/>
    <add key="Gravitate.Security.PromptTrustDevice" value="false"/>
    <add key="Gravitate.Security.EnableStrictTransportSecurityHeader" value="false" />

    <add key ="Gravitate.Security.FilterBySourceSystem" value="false"/>
    <add key ="Gravitate.Security.FilterByInternalCounterParty" value="false"/>

    <add key ="Gravitate.Security.DefaultIdentityProviderIdInternal" value="1"/>
    <add key ="Gravitate.Security.DefaultIdentityProviderIdExternal" value="1"/>

    <add key="Gravitate.Security.PinCreatedExpirationInDays" value="0" />
    <add key="Gravitate.Security.NotificationExpirationDays" value="60" />
  

  <!-- Gravitate.RoleSecurity -->

    <!--This needs to be all the roles you want to enable-->
    <add key="Gravitate.RoleSecurity.AvailableRoles" value="AnnouncementWriter, ApplicationAdmin, InternalUser, CustomerAdmin, CustomerMember, DomainAdmin, DomainMember,ForecastingMarketer, ForecastingManager, ForecastingSupplierManager, Impersonation, LimitedImpersonation, MessageReader, MessageWriter, NotesReader, NotesWriter, PositionAdmin, PositionReader, PricingAdmin, PricingReader, TradeEntryAdmin, TradeEntryCreator" />
    <!--This needs to be the subset of roles you want only available to internal users assuming hiding is enabled.-->
    <add key="Gravitate.RoleSecurity.InternalRoles" value="AnnouncementWriter,ApplicationAdmin, InternalUser, CustomerAdmin,CustomerMember,DomainAdmin,ForecastingMarketer,ForecastingManager,ForecastingSupplierManager,Impersonation,MessageReader,MessageWriter,NotesReader,NotesWriter,PositionAdmin,PositionReader,PricingAdmin,PricingReader,TradeEntryAdmin,TradeEntryCreator" />
    <add key="Gravitate.RoleSecurity.HideInternalRolesFromUsersWithoutInternalCounterparty" value="true" />

    <!-- Gravitate.Notification -->
    <add key="Gravitate.Notification.PriceNotificationQuartzJobName" value="PriceNotificationJob" />
    <add key="Gravitate.Notification.AllowUsersToSetContactPreference" value="true" />
    <add key="Gravitate.Notification.AllowMessageTypeExclusion" value="false" />
    <!--The Name the send messages controller will use to try to resolve an External Messaging Provider with windsor-->
    <add key="Gravitate.Notification.MessagingProviders" value="" />
    <add key="Gravitate.Notification.CounterPartySubscriptionsRequireCustomerPortal" value="true" />
    <add key="Gravitate.Notification.CredentialSubscriptionsRequireCustomerPortal" value="true" />
    <add key="Gravitate.Notification.CredentialSubscriptionsRequireApprovedCredential" value="true" />
    <add key="Gravitate.Notification.AllowInternalUsersInDistributionListsAndSendMessages" value="true" />

    <!-- Gravitate Admin-->
      <!-- User Admin-->
    <add key="Gravitate.Admin.Users.AllowLimitedImpersonationManagement" value="true" />
    <add key="Gravitate.Admin.Users.AllowCreationOfNewUsers" value="false" />

      <!-- ProductLocationAdmin -->
    <add key="Gravitate.ProductLocationAdmin.VolumeMaintenance.DefaultMinVolume" value="1000" />
    <add key="Gravitate.ProductLocationAdmin.VolumeMaintenance.DefaultMaxVolume" value="168000" />
    <add key="Gravitate.ProductLocationAdmin.VolumeMaintenance.DefaultVolumeIncrement" value="50" />
    <add key="Gravitate.ProductLocationAdmin.VolumeMaintenance.DefaultWarningVolume" value="50000" />
    <add key="Gravitate.ProductLocationAdmin.ProductLocationNotEditable" value="false" />
  
      <!-- CounterPartyAdmin -->
      <add key="Gravitate.Admin.Counterparty.HideLocationsWithoutAssignedProducts" value="true" />
      <add key="Gravitate.Admin.Counterparty.HideProductsWithoutAssignedLocations" value="true" />
  
  <!-- Code Value Comma Delimited List, used if more than one relationship type applies to the Mine filter-->
    <add key="Gravitate.Admin.Impersonation.ImpersonationRelationshipTypes" value="3901" />
    <add key="Gravitate.Admin.Counterparty.RequireInternalCounterparty" value="false" />

    <!-- Gravitate Dashboard-->
    <!--<add key="Gravitate.Dashboard.Video" value="http://www.youtube.com/v/NQHFViIsQHQ" />-->
    <add key="Gravitate.Dashboard.Graphs.DefaultNumberOfMonths" value="36" />
    <add key="Gravitate.Dashboard.Graphs.DefaultPriceHistoryPastDays" value="7" /> <!--Used in the Rack Prices Entity Report-->
    <add key="Gravitate.Dashboard.Graphs.PriceHistoryMaxPastDays" value="90" /> <!--Also used in the Rack Prices Entity Report-->

    <add key="Gravitate.Dashboard.Graphs.DefaultRackPricePastDays" value="30" />
    <add key="Gravitate.Dashboard.Graphs.ShowRackPriceFuturePrices" value="true" />
    <add key="Gravitate.Dashboard.Notes.DefaultNumberOfNotes" value="7" />
    <add key="Gravitate.Dashboard.RecentTrades.DefaultNumberOfTrades" value="5"/> <!--Comment out to show all currently active-->

    <add key="Gravitate.Dashboard.TodaysPrices.PublisherTypes" value="RackPosting"/>
    <!--This should be client-specific-->
    <add key="Gravitate.Dashboard.Weather.APIKey" value=""/>

    <add key="Gravitate.Dashboard.Format.DefaultDateFormat" value="MMM yyyy" />
    <!-- 0 - Product
         1 - ProductAbbreviation,
         2 - Location,
         3 - LocationAbbreviation,
         4 - PublisherType,
         5 - PublisherName,
         6 - PublisherAbbreviation,
         7 - InstrumentName,
         8 - InstrumentAbbreviation -->
    <add key="Gravitate.Dashboard.Format.TodaysPriceDisplayFormat" value="{8}" />

    <add key ="Custom.Gravitate.Dashboard.AgingAndCreditWidget.MinDate" value="2021-01-01" />
  
    <add key ="Custom.Gravitate.Dashboard.AgingWidgetConfig" value="[
       {FromDaysOffset: 0, ToDaysOffset: null, Display: 'Current'},
       {FromDaysOffset: 10, ToDaysOffset: 0, Display: 'Days 1 - 10'},
       {FromDaysOffset: 30, ToDaysOffset: 10, Display: 'Days 11 - 30'},
       {FromDaysOffset: 60, ToDaysOffset: 30, Display: 'Days 31 - 60'},
       {FromDaysOffset: 90, ToDaysOffset: 60, Display: 'Days 61 - 90'},
       {FromDaysOffset: null, ToDaysOffset: 90, Display: '&lt; 90'},
       ]"/>

    <!-- Graviate Contract Prices Links-->
    <add key="Gravitate.Prices.OrderEntryFrequency" value="300" />
  
    <!-- Gravitate theme-->
    <add key="Gravitate.Style.ThemeName" value="Custom" />
    <add key ="Gravitate.Style.NavOrientation" value ="Horizontal" />
  
    <!-- Extensibility -->
    <add key="Gravitate.Extensibility.ExtensionDirectories" value="Extensions" />

    <!-- Images -->
    <add key="Gravitate.Images.PDF" value="/App_Themes/common/images/icons/pdf.png" />
    <add key="Gravitate.Images.Disputed" value="/App_Themes/common/images/icons/Disputewarning.png" />
    <add key="Gravitate.Images.Disputed.AltText" value="Disputed Invoice" />
    <add key="Gravitate.Images.Eye" value="/App_Themes/common/images/icons/eye.png" />
    <add key="Gravitate.Images.X" value="/App_Themes/common/images/icons/x.png" />

    <!-- Invoices -->
    <add key="Gravitate.Invoices.MaxDisputeAge" value="0" />

    <!-- Workbenches -->
    <add key="Gravitate.Workbench.MessageDays" value="2" />
    <add key="Gravitate.Workbench.MessageLimit" value="50" />
    <add key="Gravitate.Workbench.WorkbenchFrequency" value="30000" />

    <!-- Pricing Pages -->
    <add key="Gravitate.Pricing.PriceAnalysis.DefaultNumberOfMonths" value="${Gravitate.Pricing.PriceAnalysis.DefaultNumberOfMonths}" />
    <add key="Gravitate.Pricing.PriceAnalysis.PercentToCrudePriceInstrumentId" value="${Gravitate.Pricing.PriceAnalysis.PercentToCrudePriceInstrumentId}" />
    <add key="Gravitate.Pricing.PriceAnalysis.PercentToCrudePriceTypeId" value="${Gravitate.Pricing.PriceAnalysis.PercentToCrudePriceTypeId}" />
    <add key="Gravitate.Pricing.RackPriceAnalysis.DefaultNumberOfMonths" value="${Gravitate.Pricing.RackPriceAnalysis.DefaultNumberOfMonths}" />
    <add key="Gravitate.Pricing.PriceAnalysis.InternalPriceTypeMeanings" value="${Gravitate.Pricing.PriceAnalysis.InternalPriceTypeMeanings}" />
    <add key="Gravitate.Pricing.PriceAnalysis.ExternalPriceTypeMeanings" value="${Gravitate.Pricing.PriceAnalysis.ExternalPriceTypeMeanings}" />
    <add key="Gravitate.Pricing.PriceAnalysis.InternalPricePublisherIds" value="${Gravitate.Pricing.PriceAnalysis.InternalPricePublisherIds}" />
    <add key="Gravitate.Pricing.PriceAnalysis.ExternalPricePublisherIds" value="${Gravitate.Pricing.PriceAnalysis.ExternalPricePublisherIds}" />
    <add key="Gravitate.Pricing.ContractPrices.PollingFrequency" value="30000" />
    <add key="Gravitate.Pricing.ContractPrices.AutoRefreshIdleTimeout" value="600000"/>
    <add key="Gravitate.Pricing.ManagePrices.PricePublishers" value="245"/>

    <!--Defaults to use throughout site-->
    <add key="Gravitate.Defaults.DefaultUnitOfMeasureId" value="3" />
    <add key="Gravitate.Defaults.DefaultProductId" value="8" />

    <!--Entity Report-->
    <add key="Gravitate.EntityReport.DefaultRowsPerPage" value="100"/>
    <add key="Gravitate.EntityReport.CurvePointFilterPricePublisherTypeId" value="100609"/>
  <add key="Gravitate.EntityReport.BOLDetailDateSliderInitializer.OffsetTimeSpanConfig" value="{All:'7.00:00', Mine:'10.00:00', Single:'30.00:00'}"/>
  <add key="Gravitate.EntityReport.TradeDateSliderInitializer.OffsetTimeSpanConfig" value="{All:'7.00:00', Mine:'10.00:00', Single:'30.00:00'}"/>
  <add key="Gravitate.EntityReport.InvoiceDateSliderInitializer.OffsetTimeSpanConfig" value="{All:'7.00:00', Mine:'10.00:00', Single:'30.00:00'}"/>

    <!-- Trade-->
    <!-- Trade Entry-->
    <add key="Gravitate.TradeEntry.DisableEntryAndEvaluationWhenSecondaryPricesAreMissing" value="true" />
    <add key="Gravitate.TradeEntry.Forward.PriceCalculator" value="WeightedAveragePriceCalculator" />
    <add key="Gravitate.TradeEntry.Prompt.PriceCalculator" value="WeightedAveragePriceCalculator" />
    <add key="Gravitate.TradeEntry.DefaultPricePublisherAbbreviation" value="OPIS" />
    <add key="Gravitate.TradeEntry.DefaultCurrencySymbol" value="USD" />
    <add key="Gravitate.TradeEntry.DefaultPrimaryPriceUoMId" value="3" />
    <add key="Gravitate.TradeEntry.ForwardMonths" value="12" />
    <add key="Gravitate.TradeEntry.RequireGroupedProducts" value="true" />
    <add key="Gravitate.TradeEntry.RequireGroupedLocations" value="true" />
    <add key="Gravitate.TradeEntry.AllowAdminCounterPartyOverrides" value="true" />
    <add key="Gravitate.TradeEntry.OnlyShowSparkPointsSinceMarketOpen" value="true" />
    <add key="Gravitate.TradeEntry.PreventTradeEntryWhenCounterPartyHasCreditHold" value="true" />
    <add key="Gravitate.TradeEntry.BookSettingByLocation" value="true" />
    <add key="Gravitate.TradeEntry.CounterPartyProfile" value="false" />
    <add key="Gravitate.TradeEntry.TradeDateWithTime" value="false" />
    <add key="Gravitate.TradeEntry.GetOriginLocationsByPLMTypes" value="false" />
    <add key="Gravitate.TradeEntry.GetDestinationLocationsByPLMTypes" value="true" />
    <add key="Gravitate.TradeEntry.GetOriginLocationsByLocationTypes" value="true" />
    <add key="Gravitate.TradeEntry.GetDestinationLocationsByLocationTypes" value="false" />
    <add key="Gravitate.TradeEntry.OriginProductLocationMappingTypes" value="4901" />
    <add key="Gravitate.TradeEntry.DestinationProductLocationMappingTypes" value="4901" />
    <add key="Gravitate.TradeEntry.OriginLocationTypes" value="4002" />
    <add key="Gravitate.TradeEntry.DestinationLocationTypes" value="" />
    <add key="Gravitate.TradeEntry.TradeQuantityFrequencyTypes" value="2200, 2201" />

    <add key="Gravitate.TradeEntry.MatchVolumeCapToDetail" value="true" />
    <!-- Valid values for location are OnTradeEntry,OnTradeEntryDetail,NoNetOrGross -->
    <add key="Gravitate.TradeEntry.NetOrGrossLocation" value="OnTradeEntry" />
    <add key="Gravitate.TradeEntry.DefaultNetOrGross" value="Gross" />
    <add key="Gravitate.TradeEntry.NetOrGrossNoneOptionText" value="Vol Val Rule" />
    <add key="Gravitate.TradeEntry.QuantityDistributionMode" value="Average"/> <!-- Average,FrontLoad,EndLoad -->
    <add key="Gravitate.TradeEntry.DuplicateDetail" value="false" />
    <add key="Gravitate.TradeEntry.DefaultToBlankLocations" value="true" />
    <add key="Gravitate.CalculatedPriceReport.CustomerPricingHidesUnmappedLocations" value="false"/>
    <add key="Gravitate.TradeEntry.TradeExecution.Forward.CutoffFuturesMonthDaysPrior" value="5" />
    <add key="Gravitate.TradeEntry.TradeExecution.Forward.DetailStartDateOffset" value="9.00:00:00" />
    <add key="Gravitate.TradeEntry.TradeExecution.Forward.DetailEndDateOffset" value="11.00:00:00" />
    <add key="Gravitate.TradeEntry.TradeExecution.Prompt.DetailStartDateOffset" value="0.00:00:00" />
    <add key="Gravitate.TradeEntry.TradeExecution.Prompt.DetailEndDateOffset" value="0.00:00:00" />
	  <add key="Gravitate.TradeEntry.TradeExecution.Prompt.DefaultInstrumentName" value="Prompt"/>
	  <add key="Gravitate.TradeEntry.TradeExecution.Forward.DefaultInstrumentName" value="Forward"/>
	  <add key="Gravitate.TradeEntry.ImpersonateOnDealEntry" value="false"/>
    <add key="Gravitate.TradeEntry.CaptureIndexPrice" value="false"/>
    <add key="Gravitate.TradeEntry.DefaultFuelSurchargeJson" value="{OpisPricePublisherId: 2, RailSurchargePriceTypeId: 705, TruckSurchargePriceTypeId: 706, RailSurchargePricePublisherId: 770, NglSurTruckLongPricePublisherId: 771, NglSurTruckShortPricePublisherId: 772, NglDayOfLiftingPostingId: 33 }" />
    <add key="Gravitate.TradeEntry.DefaultTruckFormulaSale" value="{PriceTypeId: 702, ValuationRuleId: 32 }" />
    <add key="Gravitate.TradeEntry.ImpliedMarginDealTypesJson" value="['Truck Fixed Price Sale', 'Truck Freight Actual Load Sale', 'Truck Load Sale', 'Truck Formula Sale','Truck Load Sale OPIS Day Of Lift','Truck Load Sale OPIS Previous Day Of Lift']"/>
	<add key="Gravitate.TradeEntry.ImpliedMarginPriceTypesJson" value="['AES Fixed Price', 'AES Formula Posted Price', 'AES Fixed Price OPIS Basis Day Of Lift' , 'AES Fixed Price OPIS Basis Prior Day Of Lift']"/>
    <add key="Gravitate.TradeEntry.ImpliedMarginLocationDiffPricePublisher" value="262"/>
    <add key="Gravitate.TradeEntry.DefaultPriceTypeDisplay" value="Formula Tablet (Price Curves)"/>
    <add key="Gravitate.TradeEntry.BasePriceAveragePriceTypeMeanings" value="Low, High"/>
    <!--
          {0} - entity.TradePriceType.Name,
          {1} - comp.PriceInstrument.PricePublisher.Abbreviation,
          {2} - comp.PriceInstrument.Name,
          {3} - comp.IndexPriceTypeCodeValue.Display,
          {4} - comp.PricePercent,
          {5} - comp.TradePriceValuationRule.Name
          (diff is always added to the end in parenthesis with a + if it is positive)
        -->

    <add key="Gravitate.TradeEntry.PIFilterByProduct" value="false" />
    <add key="Gravitate.TradeEntry.PaymentTermsActivationDefault" value="true" />
    <add key="Gravitate.TradeEntry.ImpersonateOnDealEntry" value="false" />
    <add key="Gravitate.TradeEntry.DuplicateDetail" value="true" />

    <add key="Gravitate.TradeEntry.DefaultPaymentTerms" value="NET 10" />
    <!-- This should match a PaymentTerm.Display value from the db. -->

        <add key="Gravitate.TradeEntry.PriceIndexFormat" value="{0}, {1}, {2}, {3}, {4}" />
        <add key="Gravitate.TradeEntry.PriceLinkShowCategory" value="false" />
        <add key="Gravitate.TradeEntry.PriceIndexInComponents" value="false" />
        <add key="Gravitate.TradeEntry.CounterPartyProfile" value="false" />
        <add key="Gravitate.TradeEntry.PIFilterByProduct" value="false" />
        <add key="Gravitate.TradeEntry.PaymentTermsActivationDefault" value="true" />
        <add key="Gravitate.TradeEntry.ImpersonateOnDealEntry" value="false" />
        <add key="Gravitate.TradeEntry.DuplicateDetail" value="true" />
        <add key="Gravitate.TradeEntry.DefaultPaymentTerms" value=""/> <!-- This should match a PaymentTerm.Display value from the db. -->
        <add key="Gravitate.TradeEntry.ReadOnlyOrderStatusMeaning" value="Accepted"/>
  

    <!-- Trade Rateability-->

    <add key="Gravitate.Trade.Rateability.MaxContractedPercentageBar" value="120" />
    <add key="Gravitate.Trade.Rateability.MinContractedPercentageBar" value="90" />
    <add key="Gravitate.Trade.Rateability.PlotPercentage" value="true" />
    <add key="Gravitate.Trade.Rateability.PlotPercentageAsLines" value="true" />
    <add key="Gravitate.Trade.Rateability.PlotPercentageAsBand" value="true" />
    <add key="Gravitate.Trade.Rateability.LineUpperBoundColor" value="green" />
    <add key="Gravitate.Trade.Rateability.LineLowerBoundColor" value="red" />
    <add key="Gravitate.Trade.Rateability.BandColor" value="rgba(68, 170, 213, 0.2)" />


    <!-- Real Time Price Service [ test, DTNProphetX ]-->
    <add key="Gravitate.RealTimePrices.RegisteredPriceProvider" value="test" />
    <add key="Gravitate.RealTimePrices.RegisteredPriceProvider.ErrorDelayInSeconds" value="5"/>
    <add key="Gravitate.PricingProviders.DTNProphetX.UserName" value="" />
    <add key="Gravitate.PricingProviders.DTNProphetX.Password" value="" />
    <add key="Gravitate.PricingProviders.DTNProphetX.PriceTypes" value="Ask, Last" />
    <add key="Gravitate.PricingProviders.DTNProphetX.ConcurrentRequests.Enabled" value="true"/>
    <add key="Gravitate.PricingProviders.DTNProphetX.ConcurrentRequests.BatchSize" value="100"/>
    <add key="Gravitate.PricingProviders.DTNProphetX.ServiceErrorThrowsException" value="true"/>


    <add key="Gravitate.RealTimePrices.RealTimePriceCacheTimeoutInSeconds" value="30"/>
    <add key="Gravitate.RealTimePrices.SecondaryPrices.ValidEstimateActualPriceTypes" value="A" />

    <!--See ApplicationSettingsManager.GetSpansOfTime (these are Market Open hours)-->
    <!--<add key="Gravitate.SpanOfTime.Market_Hours1" value="0.19:00 | 1.07:45" />
    <add key="Gravitate.SpanOfTime.Market_Hours2" value="1.08:30 | 1.13:20" />
    <add key="Gravitate.SpanOfTime.Market_Hours3" value="1.19:00 | 2.07:45" />
    <add key="Gravitate.SpanOfTime.Market_Hours4" value="2.08:30 | 2.13:20" />
    <add key="Gravitate.SpanOfTime.Market_Hours5" value="2.19:00 | 3.07:45" />
    <add key="Gravitate.SpanOfTime.Market_Hours6" value="3.08:30 | 3.13:20" />
    <add key="Gravitate.SpanOfTime.Market_Hours7" value="3.19:00 | 4.07:45" />
    <add key="Gravitate.SpanOfTime.Market_Hours8" value="4.08:30 | 4.13:20" />
    <add key="Gravitate.SpanOfTime.Market_Hours9" value="4.19:00 | 5.07:45" />
    <add key="Gravitate.SpanOfTime.Market_Hours10" value="5.08:30 | 5.13:20" />-->

    <add key="Gravitate.Pricing.MarketCommentaryFilePath" value="${Gravitate.Pricing.MarketCommentaryFilePath}"/>
    <!--Demo Dates-->
    <add key="Gravitate.Demo.CurrentDate" value ="${Gravitate.Demo.CurrentDate}"/>
    
    <!--{0} - Encrypted EntityId (from usp_QuickSearch), {1} - Encrypted AreOptionsVisible (false)-->
    <add key="Gravitate.QuickSearch.Allow" value="false" />
    <add key="Gravitate.QuickSearch.Trade.URL" value="/EntityReport/Trade?TradeId={0}&amp;{1}" />
    <add key="Gravitate.QuickSearch.BillofLading.URL" value="/EntityReport/BillOfLadingDetail?BillOfLadingId={0}&amp;{1}" />
    <add key="Gravitate.QuickSearch.Invoice.URL" value="/EntityReport/Invoice?InvoiceId={0}&amp;{1}" />
    <add key="Gravitate.QuickSearch.DeliveryRequest.URL" value="/EntityReport/DeliveryRequest?DeliveryRequestId={0}&amp;{1}" />
    <add key="Gravitate.QuickSearch.DeliveryRequest.TypeNameOverride" value="Order" />
    <!--<add key="Gravitate.QuickSearch.PendingOrder.URL" value="?OrderEntryId={0}&amp;{1}" />-->
    <!--<add key="Gravitate.QuickSearch.Order.URL" value="?OrderEntryId={0}&amp;{1}" />-->

    <!--General Site Settings-->
    <add key="Gravitate.Website.ContactUs.Allow" value="true" />
    <add key="Gravitate.Website.ContactUs.Email" value="${Gravitate.Website.ContactUs.Email}"/>
    <add key="Gravitate.Website.ShowLastExtractDateTime" value="true" />
    <add key="Gravitate.Website.ShowRequestRegistration" value="false" />
  <add key="Gravitate.Notification.CustomerContactEmailAddress" value="${Gravitate.Notification.CustomerContactEmailAddress}"/>

   
  <add key="Gravitate.DAL.ProductDisplayFormat" value="{Name}"/><!--Format Token examples: {Name} {Abbreviation}--> 
  <add key="Gravitate.DAL.LocationDisplayFormat" value="{Abbreviation}"/><!--Format Token examples: {Name} {Abbreviation}--> 
  <add key="Gravitate.DAL.CounterPartyDisplayFormat" value="{Abbreviation}"/><!--Format Token examples: {Name} {Abbreviation}--> 

  <!--Allow large json submissions-->
  <add key="aspnet:MaxJsonDeserializerMembers" value="100000" />

  <!-- Maintenance mode and sitewide messages-->
  <add key="Gravitate.Maintenance.SiteWideMessage" value="${Gravitate.Maintenance.SiteWideMessage}" />
  <!-- <add key="Gravitate.Maintenance.MaintenanceModeUrl" value="/Core/StaticHomepage" /> -->
  <!-- Gravitate External Messageing  -->
  <add key="Gravitate.ExternalMessaging.SendOnlyToColleaguesWithAccounts" value="true" />
  <add key="Gravitate.ExternalMessaging.FirebaseAppId" value="AAAAd2-pUa4:APA91bGcvF55S9Hz_3c7u3Bcf_NVmZkRhy1UiztPiL8sPabP_avLIAB4RJsgv3BWqGmkm_eixq4R2usO9ybetKgFmob7pjN-Rz-VCr-Xr8HQcwujEczDz3EnIB26kA67vPLheZOy5L1Q"/>
  <add key="Gravitate.ExternalMessaging.Mobile.MessagingUrl" value="/Core/Mobile/Messages"/>
  <add key="Gravitate.ExternalMessaging.Mobile.ContractsUrl" value="/Core/Mobile/Contracts"/>


    <!--CSV values for assembly names for Windsor to look for installers in-->
  <add key="Gravitate.Extensibility.WindsorInstallerAssemblyNames" value="Gravitate.Domain.Adapter.DAL,Gravitate.WCF,Custom.Gravitate.WCF, Gravitate.EntityView, Gravitate.Web, Gravitate.Website, Custom.Website, Gravitate.Security, Custom.Gravitate.Domain.Adapter.DAL" />


  <!--Quartz-related settings-->
  <add key="Gravitate.Quartz.Priority.NotificationGroup.DistributionEmailJob" value="1"/>
  <add key="Gravitate.Quartz.Priority.NotificationGroup.DistributionSMSJob" value="1"/>
  <add key="Gravitate.Quartz.Priority.NotificationGroup.DistributionPushJob" value="1"/>

  <!--Alliance CUSTOM SETTINGS-->
  <add key="Gravitate.Workbench.DefaultUnitOfMeasureId" value="3" />

  <add key="Gravitate.TruckAndRailQuote.TruckAndRailQuoteDefaultNumberOfMonths" value="11" />
  <add key="Gravitate.TruckAndRailQuote.TruckUnitOfMeasureId" value="1" />
  <add key="Gravitate.TruckAndRailQuote.RailUnitOfMeasureId" value="7" />
  <add key="Gravitate.TruckAndRailQuote.MapStartLat" value="36.075036" />
  <add key="Gravitate.TruckAndRailQuote.MapStartLong" value="-95.925406" />
  <add key="Gravitate.TruckAndRailQuote.MapStartZoom" value="4" />
  <add key="Gravitate.TruckAndRailQuote.AutoRefreshFrequency" value="30000" />
  <add key="Gravitate.TruckAndRailQuote.DefaultQuoteMessageFormat" value="Quote {0} {1} {2:N0} {3} {4} {5} from {6} to {7} by {8} using {9} at {10:C4} plus {11:C4} differential and {12:C4} adjustment plus {13:C4} freight plus {14:C4} surcharge totaling {15:C4}. {16}" />
  <!--Company(0), Strategy(1), Volume(2), Volume UOM(3), Product(4), Month(5), Origin(6), Destination(7), Transportation Method (8), Carrier(9), Workbench Price(10), Differential Price(11), Adjustment Price(12), Freight Price(13), Surcharge Price(14), Delivered Price(15), Message Notes(16), Lease Fee(17)-->
  <add key="Gravitate.TruckAndRailQuote.RailQuoteMessageFormat" value="Quote {0} {1} {2:N0} {3} {4} {5} from {6} to {7} by {8} using {9} at {10:C4} plus {11:C4} differential and {12:C4} adjustment plus {13:C4} freight plus {14:C4} surcharge plus {17:C4} rail lease fee totaling {15:C4}. {16}" />
  <add key="Gravitate.TruckAndRailQuote.GlobalProductId" value="20" />
  <add key="Gravitate.TruckAndRailQuote.DifferentialPreviousPriceDays" value="30" />  
</appSettings>